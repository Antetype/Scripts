ReplaceVisitor : GDVisitor {
	searchString replaceString
	
	- initWithSearch: aSearchString replaceWith: aReplaceString {
 self := super init.
 self = nil ifTrue: [^nil].
 searchString := aSearchString.
 replaceString := aReplaceString.
 ^self
	}
	
	- visitWidgetInstanceCell: cell {
 cell states allObjects do: [:eachState |
 (cell valueForKey: 'textRichText' inState: eachState) boolValue ifFalse: [
 | text |
 text := (cell valueForKey: 'textAttributedString' inState: eachState) string.
 text := text stringByReplacingOccurrencesOfString: searchString withString: replaceString.
 text := text asAttributedString.
 cell setValue: text forKey: 'textAttributedString' inState: eachState.
 ]
 ]
	}

}.


ReplaceTextCommand : GDCommand {
	visitor
	- initWithSearch: aSearchString replaceWith: aReplaceString {
 self := super init.
 self = nil ifTrue: [^nil].
 visitor := ReplaceVisitor alloc initWithSearch: aSearchString replaceWith: aReplaceString.
 ^self
	}

	- execute {
 selectionController project acceptVisitor: visitor.
	}
	- executeGUI {
 screenChangeManager rebuildRenderObjects.	
	}
        - undoGUI { self executeGUI. }

}.



"
	Minimalistic GUI:

	We use an NSAlert with an accessory-view containing text fields for hex-value colors. 

"

alert := NSAlert new.
alert setMessageText: 'Replace text'.
alert setInformativeText: 'Only works for plain text cells'.
view := NSView alloc initWithFrame: (0<>0 extent: 300<>80).
oLabel := NSTextField alloc initWithFrame: (10<>60 extent: 100<>20).
oLabel setEditable: false.
oLabel setBezeled: false.
oLabel setBordered: false.
oLabel setDrawsBackground: false.
oLabel setStringValue: 'Original'.
view addSubview: oLabel. 

oTextField := NSTextField alloc initWithFrame: (120<>60 extent: 160<>20).
view addSubview: oTextField.

rLabel := NSTextField alloc initWithFrame: (10<>30 extent: 100<>20).
rLabel setEditable: false.
rLabel setBezeled: false.
rLabel setBordered: false.
rLabel setDrawsBackground: false.
rLabel setStringValue: 'Replacement'.
view addSubview: rLabel. 

rTextField := NSTextField alloc initWithFrame: (120<>30 extent: 160<>20).
view addSubview: rTextField.

alert setAccessoryView: view.
alert addButtonWithTitle: 'Replace'.
alert addButtonWithTitle: 'Cancel'.

" 1000 = Replace, 1001 = Cancel"
alert runModal = 1000 ifTrue: [
	| command |
	command := ReplaceTextCommand alloc initWithSearch: (oTextField stringValue) replaceWith: (rTextField stringValue).
	document commandManager executeCommand: command.
].

